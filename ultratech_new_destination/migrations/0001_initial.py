# Generated by Django 3.0.6 on 2020-07-20 07:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('source_lat', models.FloatField(blank=True, null=True)),
                ('source_long', models.FloatField(blank=True, null=True)),
                ('new_destination_lat', models.FloatField(blank=True, null=True)),
                ('new_destination_long', models.FloatField(blank=True, null=True)),
                ('request_user', models.CharField(blank=True, max_length=128, null=True)),
                ('simi_predicted_ptpk', models.FloatField(blank=True, null=True)),
                ('truck_type', models.IntegerField(blank=True, null=True)),
                ('taluka', models.CharField(blank=True, max_length=128, null=True)),
                ('direct_sto', models.CharField(blank=True, max_length=128, null=True)),
                ('similarity', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SimilarityData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('plant', models.IntegerField(blank=True, null=True)),
                ('city_code', models.CharField(blank=True, max_length=128, null=True)),
                ('truck_type', models.IntegerField(blank=True, null=True)),
                ('direct_sto', models.CharField(blank=True, max_length=128, null=True)),
                ('mean_ele', models.FloatField(blank=True, null=True)),
                ('median_ele', models.FloatField(blank=True, null=True)),
                ('max_ele', models.FloatField(blank=True, null=True)),
                ('min_ele', models.FloatField(blank=True, null=True)),
                ('range_ele', models.FloatField(blank=True, null=True)),
                ('sd_ele', models.FloatField(blank=True, null=True)),
                ('kurtosis_ele', models.FloatField(blank=True, null=True)),
                ('skewness_ele', models.FloatField(blank=True, null=True)),
                ('nh_per', models.FloatField(blank=True, null=True)),
                ('sh_per', models.FloatField(blank=True, null=True)),
                ('other_per', models.FloatField(blank=True, null=True)),
                ('lead', models.IntegerField(blank=True, null=True)),
                ('ptpk', models.FloatField(blank=True, null=True)),
                ('plain_per', models.FloatField(blank=True, null=True)),
                ('hilly_per', models.FloatField(blank=True, null=True)),
                ('slab', models.CharField(blank=True, max_length=128, null=True)),
                ('simi_predicted_ptpk', models.FloatField(blank=True, null=True)),
                ('similarity_values', models.CharField(blank=True, max_length=128, null=True)),
                ('plant_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarity_data', to='ultratech_new_destination.Destination')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RefData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('city_name', models.CharField(blank=True, max_length=128, null=True)),
                ('ptpk', models.FloatField(blank=True, null=True)),
                ('lead', models.IntegerField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('toll', models.IntegerField(blank=True, null=True)),
                ('unloading', models.IntegerField(blank=True, null=True)),
                ('plant_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ref_data', to='ultratech_new_destination.Destination')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlantMapData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('plant', models.IntegerField()),
                ('source_lat', models.FloatField(blank=True, null=True)),
                ('source_long', models.FloatField(blank=True, null=True)),
                ('new_destination_lat', models.FloatField(blank=True, null=True)),
                ('new_destination_long', models.FloatField(blank=True, null=True)),
                ('distance_source_newdestination', models.FloatField(blank=True, null=True)),
                ('ref_city_code1', models.CharField(blank=True, max_length=128, null=True)),
                ('ref_city_code2', models.CharField(blank=True, max_length=128, null=True)),
                ('ref_city_code1_latitude', models.FloatField(blank=True, null=True)),
                ('ref_city_code1_longitude', models.FloatField(blank=True, null=True)),
                ('ref_city_code2_latitude', models.FloatField(blank=True, null=True)),
                ('ref_city_code2_longitude', models.FloatField(blank=True, null=True)),
                ('lead_proposed', models.FloatField(blank=True, null=True)),
                ('optimum_ptpk', models.FloatField(blank=True, null=True)),
                ('optimum_base_freight', models.IntegerField(blank=True, null=True)),
                ('plant_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='map_data', to='ultratech_new_destination.Destination')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NearestPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('city_name', models.CharField(blank=True, max_length=128, null=True)),
                ('taluka_name', models.CharField(blank=True, max_length=128, null=True)),
                ('lead', models.IntegerField(blank=True, null=True)),
                ('ptpk', models.FloatField(blank=True, null=True)),
                ('base_freight', models.IntegerField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('toll', models.IntegerField(blank=True, null=True)),
                ('unloading', models.IntegerField(blank=True, null=True)),
                ('plant_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nearest_points', to='ultratech_new_destination.Destination')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
