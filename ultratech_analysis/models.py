from django.db import models


# Create your models here.

class simi_data(models.Model):
    """
    Model for simi data
    """
    role_id = models.CharField(max_length=100, null=True)
    zone = models.CharField(max_length=100, null=True)
    plant = models.FloatField(null=True)
    type = models.CharField(max_length=100, null=True)
    city_code = models.CharField(max_length=100, null=True)
    city_desc = models.CharField(max_length=100, null=True)
    simi_type = models.CharField(max_length=100, null=True)
    simi_city_code = models.CharField(max_length=100, null=True)
    simi_city_name = models.CharField(max_length=100, null=True)
    truck_type = models.FloatField(null=True)
    direct_sto = models.CharField(max_length=100, null=True)
    mean_route_timetaken = models.FloatField(null=True)
    mean_ele = models.FloatField(null=True)
    sd_ele = models.FloatField(null=True)
    nh_per = models.FloatField(null=True)
    sh_per = models.FloatField(null=True)
    other_per = models.FloatField(null=True)
    lead = models.FloatField(null=True)
    ptpk = models.FloatField(null=True)
    plain_per = models.FloatField(null=True)
    hilly_per = models.FloatField(null=True)
    onward_travel = models.FloatField(null=True)
    return_travel = models.FloatField(null=True)
    idle_time_cust = models.FloatField(null=True)
    slab = models.CharField(max_length=100, null=True)
    city_no = models.CharField(max_length=100, null=True)
    simi_coeff = models.FloatField(null=True)
    ptpk_pred = models.FloatField(null=True)
    path = models.CharField(max_length=100, null=True)
    quantity = models.FloatField(null=True)
    batch = models.FloatField(null=True)
    source_lat = models.FloatField(null=True)
    source_long = models.FloatField(null=True)
    latitude = models.FloatField(null=True)
    longitude = models.FloatField(null=True)
    pred_base_freight = models.FloatField(null=True)
    impact = models.FloatField(null=True)
    base_freight = models.FloatField(null=True)
    taluka = models.CharField(max_length=100, null=True)
    i2_taluka_desc = models.CharField(max_length=100, null=True)
    t_type = models.CharField(max_length=100, null=True)
    full_plant_name = models.CharField(max_length=100, null=True)
    simi_city = models.CharField(max_length=100, null=True)
    full_city = models.CharField(max_length=100, null=True)
    route_1 = models.CharField(max_length=100, null=True)
    route = models.CharField(max_length=100, null=True)
    route_2 = models.CharField(max_length=100, null=True)
    PLANT_NAME = models.CharField(max_length=100, null=True, db_column="PLANT_NAME")
    simi_route = models.CharField(max_length=100, null=True)
    plant_name = models.CharField(max_length=100, null=True, db_column="PLANT.NAME")
    clc_1 = models.CharField(max_length=100, null=True)
    clc_2 = models.CharField(max_length=100, null=True)
    clc_3 = models.CharField(max_length=100, null=True)
    clc_4 = models.CharField(max_length=100, null=True)
    clc_5 = models.CharField(max_length=100, null=True)
    clc_6 = models.BigIntegerField(null=True)
    clc_7 = models.BigIntegerField(null=True)
    clc_8 = models.CharField(max_length=100, null=True)
    clc_9 = models.BigIntegerField(null=True)
    clc_10 = models.BigIntegerField(null=True)
    zone_head_1 = models.CharField(max_length=100, null=True)
    zone_head_2 = models.BigIntegerField(null=True)
    zl_coordinator_1 = models.CharField(max_length=100, null=True)
    zl_coordinator_2 = models.CharField(max_length=100, null=True)
    zl_coordinator_3 = models.BigIntegerField(null=True)
    plant_head_1 = models.CharField(max_length=100, null=True)
    plant_head_2 = models.BigIntegerField(null=True)

    def __str__(self):
        return self.role_id

    class Meta:
        """
        Customized db name for column master has been provided
        """
        db_table = "simi_data"
        verbose_name = "Ultra Tech Similarity Data"
        verbose_name_plural = "Ultra Tech Similarity Data"


class SimilarityData(models.Model):
    zone = models.CharField(max_length=128, null=True, blank=True)
    plant = models.IntegerField(null=True, blank=True)
    type = models.CharField(max_length=128, null=True, blank=True)
    city_code = models.CharField(max_length=128, null=True, blank=True)
    city_desc = models.CharField(max_length=128, null=True, blank=True)
    simi_type = models.CharField(max_length=128, null=True, blank=True)
    simi_city_code = models.CharField(max_length=128, null=True, blank=True)
    simi_city_name = models.CharField(max_length=128, null=True, blank=True)
    truck_type = models.IntegerField(null=True, blank=True)
    direct_sto = models.CharField(max_length=128, null=True, blank=True)
    mean_route_time_taken = models.FloatField(null=True, blank=True)
    mean_ele = models.FloatField(null=True, blank=True)
    sd_ele = models.FloatField(null=True, blank=True)
    nh_per_ref = models.FloatField(null=True, blank=True)
    sh_per_ref = models.FloatField(null=True, blank=True)
    other_per_ref = models.FloatField(null=True, blank=True)
    lead = models.FloatField(null=True, blank=True)
    ptpk = models.FloatField(null=True, blank=True)
    plain_per_ref = models.FloatField(null=True, blank=True)
    hilly_per_ref = models.FloatField(null=True, blank=True)
    onward_travel = models.FloatField(null=True, blank=True)
    return_travel = models.FloatField(null=True, blank=True)
    idle_time_cust = models.FloatField(null=True, blank=True)
    slab = models.CharField(max_length=128, null=True, blank=True)
    cityno = models.CharField(max_length=128, null=True, blank=True)
    simi_coeff = models.FloatField(null=True, blank=True)
    ptpk_pred = models.FloatField(null=True, blank=True)
    path = models.CharField(max_length=128, null=True, blank=True)
    quantity = models.FloatField(null=True, blank=True)
    batch = models.FloatField(null=True, blank=True)
    source_lat = models.FloatField(null=True, blank=True)
    source_long = models.FloatField(null=True, blank=True)
    latitude = models.FloatField(null=True, blank=True)
    longitude = models.FloatField(null=True, blank=True)
    pred_base_freight = models.FloatField(null=True, blank=True)
    impact = models.FloatField(null=True, blank=True)
    base_freight = models.FloatField(null=True, blank=True)
    taluka = models.CharField(max_length=128, null=True, blank=True)
    i2_taluka_desc = models.CharField(max_length=128, null=True, blank=True)
    t_type = models.CharField(max_length=128, null=True, blank=True)
    full_plant_name = models.CharField(max_length=128, null=True, blank=True)
    simi_city = models.CharField(max_length=128, null=True, blank=True)
    full_city = models.CharField(max_length=128, null=True, blank=True)
    route_1 = models.CharField(max_length=128, null=True, blank=True)
    route = models.CharField(max_length=128, null=True, blank=True)
    route_2 = models.CharField(max_length=128, null=True, blank=True)
    plant_name = models.CharField(max_length=128, null=True, blank=True)
    simi_route = models.CharField(max_length=128, null=True, blank=True)
    total_restriction_time = models.FloatField(null=True, blank=True)
    integration_flag = models.IntegerField(null=True, blank=True)
    cluster_flag = models.IntegerField(null=True, blank=True)
    union_flag = models.IntegerField(null=True, blank=True)
    depot_code = models.CharField(max_length=128, null=True, blank=True)
    depot_desc = models.CharField(max_length=128, null=True, blank=True)
    district_code = models.CharField(max_length=128, null=True, blank=True)
    district_desc = models.CharField(max_length=128, null=True, blank=True)

    class Meta:
        verbose_name = "UltraTech Similarity Data"
        verbose_name_plural = "UltraTech Similarity Data"
